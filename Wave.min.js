/**
 *	Wave JS
 *
 *	Description: Build a Sine wave on the canvas element, based on tweaks by the user.
 *	Author: RITESH KUKREJA
 *	Website: riteshkukreja.wordpress.com
 *	Github: https://github.com/riteshkukreja/sine-wave/
 *
**/
var Wave=function(t){if("object"!=typeof t&&"undefined"==typeof t.canvas)throw"Provide a valid canvas element for the application.";var e=t.canvas,i=e.getContext("2d"),n=t.frequency||.005,a=t.phase||30,o=t.amplitude||50,r=t.color||"red",f=t.shift||10,l=t.lineWidth||4,d="undefined"!=typeof t.outline?t.outline:!0,h="undefined"!=typeof t.fill?t.fill:!1,c="undefined"!=typeof t.gradient?t.gradient:!1,u=t.origin||{x:0,y:e.height/2},s=function(t,n,a){var o=l/2;if(i.beginPath(),d&&(i.fillStyle=a,i.lineWidth=2,i.arc(t,n,o,0,2*Math.PI),i.fill()),h){if(c){var r=i.createLinearGradient(0,0,0,e.height);r.addColorStop(.5,a),r.addColorStop(1,"transparent"),i.fillStyle=r}else i.fillStyle=a;i.fillRect(t-o,n-o,o,e.height-n+o)}},v=function(t,e,i){for(var a=u.x;a<u.x+t;a++){var r=o*Math.sin(n*(a+e));s(a,u.y+r,i)}},p=function(t,e){return Math.floor(Math.random()*(e-t))+t},y=function(){i.clearRect(0,0,e.width,e.height)},g=function(){requestAnimationFrame(g),y(),a+=p(10,15)+f,v(e.width,a,r)},w=function(){a+=p(10,15)+f,v(e.width,a,r)};this.redraw=function(){w()},this.draw=function(){g()},this.clearCanvas=function(){y()}};